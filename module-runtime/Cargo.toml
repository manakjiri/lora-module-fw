[package]
authors = ["Jiri Manak"]
edition = "2021"
readme = "README.md"
name = "module-runtime"
version = "0.1.0"

[lib]
crate-type = ["lib"]
name = "module_runtime"
test = false
bench = false

[dependencies]
cortex-m = { version = "0.7.6", features = ["inline-asm", "critical-section-single-core"] }
cortex-m-rt = "0.7.0"
embedded-hal = { version = "1.0.0-rc.2" }
embedded-hal-async = { version = "1.0.0-rc.2" }
embedded-hal-bus = { version = "0.1.0-rc.2", features = ["async"]}

embassy-stm32 = { path = "../external/embassy/embassy-stm32", features = ["defmt", "stm32wle5cc", "time-driver-any", "memory-x", "unstable-pac", "exti", "chrono"] }
embassy-executor = { path = "../external/embassy/embassy-executor", features = ["nightly", "arch-cortex-m", "executor-thread", "defmt", "integrated-timers"] }
embassy-time = { path = "../external/embassy/embassy-time", features = ["defmt", "defmt-timestamp-uptime"] }
embassy-sync = { path = "../external/embassy/embassy-sync", features = ["defmt"] }
embassy-futures = { path = "../external/embassy/embassy-futures", features = ["defmt"] }
embassy-embedded-hal = { path = "../external/embassy/embassy-embedded-hal" }
embassy-boot = { path = "../external/embassy/embassy-boot", features = ["defmt"] }
embassy-boot-stm32 = { path = "../external/embassy/embassy-boot-stm32", features = ["defmt"] }
lora-phy = { path = "../external/lora-rs/lora-phy", features = ["lorawan-radio"] }

defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }

futures = { version = "0.3.30", default-features = false, features = ["async-await"] }
# must be same as postcard
heapless = { version = "0.7.17", default-features = false, features = ["serde"] }
chrono = { version = "^0.4", default-features = false }
postcard = { version = "1.0.8", default-features = false, features = ["heapless", "use-defmt"]}
serde = { version = "1.0", default-features = false }
sha2 = { version = "0.10.8", default-features = false }

gateway-host-schema = { path="../gateway-host-schema" }
module-bootloader = { path="../module-bootloader" }
